# FFFF Elan Beta 2 valid

function asRoman(d as Int) return String
  var result set to ""
  var d2 set to d
  each vs in valueSymbols
    var value, symbol set to vs
    while d2 >= value
      set result to result + symbol
      set d2 to d2 - value
    end while
  end each
  return result
end function

constant valueSymbols set to {(1000, "M"), (900, "CM"), (500, "D"), (400, "CD"), (100, "C"), (90, "XC"), (50, "L"), (40, "XL"), (10, "X"), (9, "IX"), (5, "V"), (4, "IV"), (1, "I")}

test 
  assert asRoman(0) is ""
  assert asRoman(1) is "I"
  assert asRoman(2) is "II"
  assert asRoman(3) is "III"
  assert asRoman(4) is "IV"
  assert asRoman(5) is "V"
  assert asRoman(6) is "VI"
  assert asRoman(7) is "VII"
  assert asRoman(8) is "VIII"
  assert asRoman(9) is "IX"
  assert asRoman(10) is "X"
  assert asRoman(11) is "XI"
  assert asRoman(14) is "XIV"
  assert asRoman(15) is "XV"
  assert asRoman(17) is "XVII"
  assert asRoman(19) is "XIX"
  assert asRoman(20) is "XX"
  assert asRoman(21) is "XXI"
  assert asRoman(25) is "XXV"
  assert asRoman(28) is "XXVIII"
  assert asRoman(29) is "XXIX"
  assert asRoman(30) is "XXX"
  assert asRoman(37) is "XXXVII"
  assert asRoman(41) is "XLI"
  assert asRoman(50) is "L"
  assert asRoman(54) is "LIV"
  assert asRoman(79) is "LXXIX"
  assert asRoman(95) is "XCV"
  assert asRoman(333) is "CCCXXXIII"
  assert asRoman(444) is "CDXLIV"
  assert asRoman(555) is "DLV"
  assert asRoman(666) is "DCLXVI"
  assert asRoman(999) is "CMXCIX"
  assert asRoman(1066) is "MLXVI"
  assert asRoman(1966) is "MCMLXVI"
end test
