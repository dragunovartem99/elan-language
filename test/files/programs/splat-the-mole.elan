# c06f24baebf36a0411c2965d79d3e9bc7bf586f9898350f218db71f76bfa0e35 Elan Beta 2 valid

main
  var g set to new BlockGraphics()
  for i from 1 to 9 step 1
    set g to putAtHole(g, i, " {i}", black, white)
    set g to putAtHole(g, i, " ", white, black)
  end for
  call g.draw()
  var diff set to inputIntBetween("Enter difficulty (1-9): ", 1, 9)
  var score set to 0
  for moles from 1 to 20 step 1
    call nextMole(g, score, diff)
    call clearConsole()
    print "Score: {score}/{moles}"
  end for
  print "Game over! Difficulty: {diff}"
end main

procedure nextMole(out g as BlockGraphics, out score as Int, diff as Int)
  let mole be stringForUnicode(9787)
  let hole be randomInt(1, 9)
  set g to putAtHole(g, hole, mole, white, green)
  call g.draw()
  let timeOut be clock() + 2000 - diff*10
  var hit set to false
  while (not hit) and (clock() < timeOut)
    let k be g.getKeystroke()
    if k is hole.asString()
      then
        set hit to true
        set score to score + 1
        set g to putAtHole(g, hole, " ", red, red)
        call g.draw()
        call pause(1000)
    end if
  end while
  set g to putAtHole(g, hole, " ", black, black)
end procedure

function putAtHole(g as BlockGraphics, hole as Int, c as String, fColour as Int, bColour as Int) return BlockGraphics
  let pos be hole - 1
  let x be (pos mod 3)*5 + 10
  let y be 20 - (pos div 3)*5
  return g.withText(x, y, c, fColour, bColour)
end function
