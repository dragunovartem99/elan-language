# 754ed4db652ec89007d1a80cc052e82b8a5beb2b16622095a298941bfa712676 Elan Beta 2 valid

function asRoman(d as Int) return String
  var result set to ""
  var d2 set to d
  set (d2, result) to processSymbol(1000, "M", d2, result)
  set (d2, result) to processSymbol(900, "CM", d2, result)
  set (d2, result) to processSymbol(900, "CM", d2, result)
  set (d2, result) to processSymbol(500, "D", d2, result)
  set (d2, result) to processSymbol(400, "CD", d2, result)
  set (d2, result) to processSymbol(100, "C", d2, result)
  set (d2, result) to processSymbol(90, "XC", d2, result)
  set (d2, result) to processSymbol(50, "L", d2, result)
  set (d2, result) to processSymbol(40, "XL", d2, result)
  set (d2, result) to processSymbol(10, "X", d2, result)
  set (d2, result) to processSymbol(9, "IX", d2, result)
  set (d2, result) to processSymbol(5, "V", d2, result)
  set (d2, result) to processSymbol(4, "IV", d2, result)
  set (d2, result) to processSymbol(1, "I", d2, result)
  return result
end function

function processSymbol(n as Int, x as String, d as Int, result as String) return (Int, String)
  var d2 set to d
  var result2 set to result
  while d2 >= n
    set d2 to d2 - n
    set result2 to result2 + x
  end while
  return (d2, result2)
end function

test 
  assert asRoman(0) is ""
  assert asRoman(1) is "I"
  assert asRoman(2) is "II"
  assert asRoman(3) is "III"
  assert asRoman(4) is "IV"
  assert asRoman(5) is "V"
  assert asRoman(6) is "VI"
  assert asRoman(7) is "VII"
  assert asRoman(8) is "VIII"
  assert asRoman(9) is "IX"
  assert asRoman(10) is "X"
  assert asRoman(11) is "XI"
  assert asRoman(14) is "XIV"
  assert asRoman(15) is "XV"
  assert asRoman(17) is "XVII"
  assert asRoman(19) is "XIX"
  assert asRoman(20) is "XX"
  assert asRoman(21) is "XXI"
  assert asRoman(25) is "XXV"
  assert asRoman(28) is "XXVIII"
  assert asRoman(29) is "XXIX"
  assert asRoman(30) is "XXX"
  assert asRoman(37) is "XXXVII"
  assert asRoman(41) is "XLI"
  assert asRoman(50) is "L"
  assert asRoman(54) is "LIV"
  assert asRoman(79) is "LXXIX"
  assert asRoman(95) is "XCV"
  assert asRoman(333) is "CCCXXXIII"
  assert asRoman(444) is "CDXLIV"
  assert asRoman(555) is "DLV"
  assert asRoman(666) is "DCLXVI"
  assert asRoman(999) is "CMXCIX"
  assert asRoman(1066) is "MLXVI"
  assert asRoman(1966) is "MCMLXVI"
end test
