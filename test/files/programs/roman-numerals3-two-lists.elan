# 3b851d5b1261027f824e410db7223a29253a46a49e0fb374435b762e9f0aef73 Elan Beta 2 valid

function asRoman(d as Int) return String
  var result set to ""
  var d2 set to d
  for i from 0 to decValues.length() - 1 step 1
    var decValue set to decValues.get(i)
    while d2 >= decValue
      set result to result + romSymbols.get(i)
      set d2 to d2 - decValue
    end while
  end for
  return result
end function

constant decValues set to {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1}

constant romSymbols set to {"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"}

test 
  assert asRoman(0) is ""
  assert asRoman(1) is "I"
  assert asRoman(2) is "II"
  assert asRoman(3) is "III"
  assert asRoman(4) is "IV"
  assert asRoman(5) is "V"
  assert asRoman(6) is "VI"
  assert asRoman(7) is "VII"
  assert asRoman(8) is "VIII"
  assert asRoman(9) is "IX"
  assert asRoman(10) is "X"
  assert asRoman(11) is "XI"
  assert asRoman(14) is "XIV"
  assert asRoman(15) is "XV"
  assert asRoman(17) is "XVII"
  assert asRoman(19) is "XIX"
  assert asRoman(20) is "XX"
  assert asRoman(21) is "XXI"
  assert asRoman(25) is "XXV"
  assert asRoman(28) is "XXVIII"
  assert asRoman(29) is "XXIX"
  assert asRoman(30) is "XXX"
  assert asRoman(37) is "XXXVII"
  assert asRoman(41) is "XLI"
  assert asRoman(50) is "L"
  assert asRoman(54) is "LIV"
  assert asRoman(79) is "LXXIX"
  assert asRoman(95) is "XCV"
  assert asRoman(333) is "CCCXXXIII"
  assert asRoman(444) is "CDXLIV"
  assert asRoman(555) is "DLV"
  assert asRoman(666) is "DCLXVI"
  assert asRoman(999) is "CMXCIX"
  assert asRoman(1066) is "MLXVI"
  assert asRoman(1966) is "MCMLXVI"
end test
