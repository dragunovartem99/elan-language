# 72615ba202bace42876c96774946c0b898672f246ad47c0f2bd25bee448bd3d4 Elan Beta 2 valid

main
  var g set to new BlockGraphics()
  for i from 1 to 9 step 1
    set g to putAtHole(g, i, " {i}", black, white)
    set g to putAtHole(g, i, " ", black, black)
  end for
  call g.draw()
  for moles from 1 to 20 step 1
    call nextMole(g)
  end for
  print "Game over!"
end main

procedure nextMole(out g as BlockGraphics)
  let mole be stringForUnicode(9787)
  let hole be randomInt(1, 9)
  set g to putAtHole(g, hole, mole, white, green)
  call g.draw()
  let timeOut be clock() + 2000
  while clock() < timeOut

  end while
  set g to putAtHole(g, hole, " ", black, black)
  call g.draw()
end procedure

function putAtHole(g as BlockGraphics, hole as Int, c as String, fColour as Int, bColour as Int) return BlockGraphics
  let coords be [(0, 0), (5, 15), (10, 15), (15, 15), (5, 10), (10, 10), (15, 10), (5, 5), (10, 5), (15, 5)]
  let x, y be coords[hole]
  return g.withText(x, y, c, fColour, bColour)
end function

test putAtHole
  let g be new BlockGraphics()
  let g1 be putAtHole(g, 1, "*", black, white)
  assert g1.getChar(5, 15) is "*"
  let g2 be putAtHole(g, 2, "*", black, white)
  assert g2.getChar(10, 15) is "*"
  let g3 be putAtHole(g, 3, "*", black, white)
  assert g3.getChar(15, 15) is "*"
  let g4 be putAtHole(g, 4, "*", black, white)
  assert g4.getChar(5, 10) is "*"
  let g5 be putAtHole(g, 5, "*", black, white)
  assert g5.getChar(10, 10) is "*"
  let g6 be putAtHole(g, 6, "*", black, white)
  assert g6.getChar(15, 10) is "*"
  let g7 be putAtHole(g, 7, "*", black, white)
  assert g7.getChar(5, 5) is "*"
  let g8 be putAtHole(g, 8, "*", black, white)
  assert g8.getChar(10, 5) is "*"
  let g9 be putAtHole(g, 9, "*", black, white)
  assert g9.getChar(15, 5) is "*"
end test
