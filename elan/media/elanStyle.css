:root {
    --selection:rgb(173, 214, 255);
    /* --unused: rgb(175,0,219); */
    --valid: rgb(146, 236, 146); 
}
code { 
    padding: 0px;
}

* {
    color: black;
    font-family: consolas;
    font-size: 11pt;
    background-color: white;
    border-color: white;
}

*:focus {
    outline: none;
}

hash {
    display: none;
}

input, input:focus , input:active{
    border: none;
    outline: none;
    padding: 0px;
    margin: 0px;
}

/* Basic Colour scheme */
span {
    background-color: inherit;
}

keyword {
    color: rgb(56,0,255);
}

type {
    color: rgb(38,127,153
    );
}

comment, header {
    color: green;
}

.string {
    color: rgb(165, 2, 2);
}
/* Status colouring*/
.valid {
    background-color: var(--valid);
}

/* Horizontal and vertical layout */
statement, constructor, property, classDef > function, classDef > procedure, classDef > member {
    display: block;
    background-color: white;
    border-left-style: solid;
    border-left-width: 2ch;
}

header, constant, main, procedure, function, enum, classDef, constructor, property, member, global {
    display: block;
    padding-bottom: 1ch;
}

/* Frame selection */
.selected > * , .selected > clause *{
    border-left-color: var(--selection);
}

statement.selected, statement.selected *, .selected > clause *, .selected > top, .selected > top *, .selected > keyword, .selected > text, .selected > text * {
    background-color: var(--selection);
    border-right-color: var(--selection);
}

text.selected, text.selected * {
    background-color: lightgrey;
}

::placeholder {
    color: white;
}

/* Text entry validation */
text.empty, type.empty {
      color: rgb(196, 193, 193);
}
text.incomplete {
    color:rgb(223, 145, 0);
}
text.invalid, type.invalid {
    color:red;
}
text.valid, type.valid {
  color:rgb(0, 187, 0);
}
/* Collapse / Expand */
expand {
    display: none;
}

.multiline.collapsed expand {
    display:inline;
    font-weight: bold;
    color: white;
    background-color:rgb(101, 176, 250);
    margin-right: 1ch;
    cursor: pointer;
}

.multiline.collapsed > :not(top)
{
    display: none;
}