:root {
    --selection:rgb(173, 214, 255);
    --valid: rgb(146, 236, 146); 
    --incomplete: rgba(255, 166, 0);
    --invalid:  rgba(255, 0, 0, 0.617);
}
code { 
    padding: 0px;
}

* {
    color: black;
    font-family: consolas;
    font-size: 11pt;
    background-color: white;
    border-color: white;
}

*:focus {
    outline: none;
}

input, input:focus , input:active{
    border: none;
    outline: none;
    padding: 0px;
    margin: 0px;
}

/* Basic Colour scheme */
hash {
    display: none;
}

span {
    background-color: inherit;
}

keyword {
    color: rgb(56,0,255);
}

type {
    color: rgb(38,127,153
    );
}

comment, header, header *{
    color: green;
}

.string {
    color: rgb(165, 2, 2);
}

/* Horizontal and vertical spacing */
statement, constructor, property, classDef > function, classDef > procedure, classDef > member {
    display: block;
    background-color: white;
    border-left-style: solid;
    border-left-width: 2ch;
}

header, constant, main, procedure, function, enum, classDef, constructor, property, member, global {
    display: block;
    padding-bottom: 1ch;
}

/* Frame selection */
.selected > * , .selected > clause *{
    border-left-color: var(--selection);
}

.selected > clause *, .selected > top, .selected > top *, .selected > keyword, .selected > field, .selected > field * {
    background-color: var(--selection);
    border-right-color: var(--selection);
}

/* Multline Collapse / Expand */
expand {
    display: none;
}
.multiline.collapsed > :not(top)
{
    display: none;
}
.multiline.collapsed expand {
    display:inline;
    font-weight: bold;
    color: white;
    margin-right: 1ch;
    /* cursor: pointer; why only this? */
}
.multiline.collapsed.invalid expand {
    background-color: var(--invalid);
}
.multiline.collapsed.incomplete expand {
    background-color: var(--incomplete);
}
.multiline.collapsed.valid expand {
    background-color: var(--valid);
}

/* Fields */
/* field-text*/
field.invalid text {
    color: var(--invalid);
}
field.incomplete text {
    color: var(--incomplete);
}
field.valid text {
    color: black; /* redundant rule - as black by default - but included for clarity */
}
field.selected.invalid text {
    background-color: var(--invalid);
}
field.selected.incomplete text {
    background-color: var(--incomplete);
}
field.selected.valid text {
    background-color: var(--valid);
}
/* field-label */
field label {
  display: none;
}
field.empty label {
    display:inline;
}
field.empty.optional label {
    display:none;
}
.selected field.empty.optional label {
    display: inline;
    background: lightgrey;
    color: white;
}
field.selected label {
    display: none;
}
/* selector label */
global label, member label, statement label  {
    display: none;
}
global.selected.empty label, member.selected.empty label, statement.selected.empty label {
    display: inline;
    color: white;
}

/* field-help */
field help, global help, member help, statement help  {
    display: none;
}
field.selected help {
    display: inline;
    color: white;
    background-color: lightgrey;
}

/* selector help */
global help, member help, statement help  {
    display: none;
}
 global.selected help, member.selected help, statement.selected help {
    display: inline;
    color: white;
}
 