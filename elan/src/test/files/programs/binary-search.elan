# c1738db5a87121c47ae6646d4c6a250b3f011aedfd1eaa379dadd7e638c0784a Elan v0.1 valid

main
  var exit set to false
  while not exit
    print "What type of fruit do you want ('x' to exit)?"
    input wanted
    if wanted is not "x"
      var result set to binarySearch(fruit, wanted)
      if result
        print "We can supply a {wanted}"
        else
          print "Sorry, we cannot supply a {wanted}"
      end if
      else
        set exit to true
    end if
  end while
end main

function binarySearch(li as ImmutableList<of String>, item as String) return Boolean
  var result set to false
  if li.length() > 0
    var mid set to div(li.length(), 2)
    var value set to li[mid]
    if item is value
      set result to true
      else if isBefore(item, value)
        set result to binarySearch(li[..mid], item)
      else
        set result to binarySearch(li[mid + 1..], item)
    end if
  end if
  return result
end function

test binarySearch
  var li1 set to {"lemon", "lime", "orange"}
  assert binarySearch(li1, "lemon") is true
  assert binarySearch(li1, "lime") is true
  assert binarySearch(li1, "orange") is true
  assert binarySearch(li1, "pear") is false
  var li2 set to {"lemon", "orange"}
  assert binarySearch(li2, "lemon") is true
  assert binarySearch(li2, "orange") is true
  assert binarySearch(li2, "pear") is false
  var li3 set to {"lemon"}
  assert binarySearch(li3, "lemon") is true
  assert binarySearch(li3, "lime") is false
  var li4 set to new ImmutableList<of String>()
  assert binarySearch(li4, "pear") is false
end test

constant fruit set to {"apple", "avocado", "banana", "blueberry", "cherry", "fig", "grape", "kiwi", "lemon", "lychee", "mango", "orange", "papaya", "peach", "pear", "pinapple", "plumb", "raspberry", "strawberry", "watermelon"}
