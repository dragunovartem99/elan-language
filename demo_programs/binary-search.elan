# d76017801d666eb0ae57bfcd2fbc4a388e6575be2371316cf1ef5f7f016478cb Elan 0.10.0-Beta guest default_profile valid

main
  let fruit be example.asList()
  variable exit set to false
  while not exit
    let wanted be inputString("What type of fruit do you want ('x' to exit)? ")
    if wanted isnt "x" then
      let result be binarySearch(fruit, wanted)
      if result then
        print "We can supply a {wanted}"
      else
        print "Sorry, we cannot supply a {wanted}"
      end if
    else
      set exit to true
    end if
  end while
end main

function binarySearch(list as List<of String>, item as String) returns Boolean
  variable result set to false
  if list.length() > 0 then
    let mid be list.length() div 2
    let value be list[mid]
    if item is value then
      set result to true
    else if item.isBefore(value) then
      set result to binarySearch(list[..mid], item)
    else
      set result to binarySearch(list[mid + 1..], item)
    end if
  end if
  return result
end function

test 
  let li1 be ["lemon", "lime", "orange"]
  assert binarySearch(li1, "lemon") is true
  assert binarySearch(li1, "lime") is true
  assert binarySearch(li1, "orange") is true
  assert binarySearch(li1, "pear") is false
  let li2 be ["lemon", "orange"]
  assert binarySearch(li2, "lemon") is true
  assert binarySearch(li2, "orange") is true
  assert binarySearch(li2, "pear") is false
  let li3 be ["lemon"]
  assert binarySearch(li3, "lemon") is true
  assert binarySearch(li3, "lime") is false
  let li4 be empty List<of String>
  assert binarySearch(li4, "pear") is false
end test

constant example set to {"apple", "avocado", "banana", "blueberry", "cherry", "fig", "grape", "kiwi", "lemon", "lychee", "mango", "orange", "papaya", "peach", "pear", "pineapple", "plum", "raspberry", "strawberry", "watermelon"}
