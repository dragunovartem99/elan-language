# FFFF Elan Beta 6 valid

function bestFitLine(points as List<of Point>) returns (Float, Float)
  let sumX be points.reduce(0.0, lambda s as Float, p as Point => s + p.x)
  let sumXsq be points.reduce(0.0, lambda s as Float, p as Point => s + p.x^2)
  let sumY be points.reduce(0.0, lambda s as Float, p as Point => s + p.y)
  let sumXY be points.reduce(0.0, lambda s as Float, p as Point => s + p.x*p.y)
  let n be points.length()
  let a be (sumY*sumXsq - sumX*sumXY)/(n*sumXsq - sumX*sumX)
  let b be (n*sumXY - sumX*sumY)/(n*sumXsq - sumX*sumX)
  return tuple(a, b)
end function

class Point
  constructor(x as Float, y as Float)
    set property.x to x
    set property.y to y
  end constructor

  property x as Float

  property y as Float

end class

test 
  let l1 be {new Point(0.71, 1.12), new Point(3.56, 5.36), new Point(7.83, 9.04)}
  let first, second be bestFitLine(l1)
  assert first.round(3) is 0.766
  assert second.round(3) is 1.093
end test
