NL=1
SINGLE_LINE_COMMENT=2
COMMENT_MARKER=3
ABSTRACT=4
AND=5
AS=6
BE=7
ASSERT=8
CALL=9
CASE=10
CATCH=11
CLASS=12
CONSTANT=13
CONSTRUCTOR=14
CURRY=15
DEFAULT=16
DIV=17
EACH=18
ELSE=19
END=20
ENUM=21
FOR=22
FROM=23
FUNCTION=24
GLOBAL=25
IF=26
IMMUTABLE=27
IMPORT=28
IN=29
INTO=30
INHERITS=31
INPUT=32
LAMBDA=33
LET=34
LIBRARY=35
MAIN=36
MOD=37
NEW=38
NOT=39
OF=40
IS=41
OR=42
PACKAGE=43
PARTIAL=44
PRINT=45
PRIVATE=46
PROCEDURE=47
PROPERTY=48
REF=49
REPEAT=50
RETURN=51
SET=52
STEP=53
SWITCH=54
SYSTEM=55
TEST=56
THEN=57
THIS=58
THROW=59
TO=60
TRY=61
VAR=62
WHEN=63
WHILE=64
WITH=65
XOR=66
BOOL_VALUE=67
VALUE_TYPE=68
ARRAY=69
LIST=70
DICTIONARY=71
ITERABLE=72
EQUALS=73
ARROW=74
OPEN_BRACE=75
CLOSE_BRACE=76
OPEN_SQ_BRACKET=77
CLOSE_SQ_BRACKET=78
OPEN_BRACKET=79
CLOSE_BRACKET=80
DOUBLE_DOT=81
DOT=82
COMMA=83
COLON=84
PLUS=85
MINUS=86
MULT=87
DIVIDE=88
POWER=89
LT=90
GT=91
LE=92
GE=93
IS_NOT=94
TYPENAME=95
IDENTIFIER=96
LITERAL_INTEGER=97
LITERAL_FLOAT=98
LITERAL_CHAR=99
LITERAL_STRING=100
WHITESPACES=101
TEXT=102
NEWLINE=103
WS=104
'#'=3
'abstract'=4
'and'=5
'as'=6
'be'=7
'assert'=8
'call'=9
'case'=10
'catch'=11
'class'=12
'constant'=13
'constructor'=14
'curry'=15
'default'=16
'div'=17
'each'=18
'else'=19
'end'=20
'enum'=21
'for'=22
'from'=23
'function'=24
'global'=25
'if'=26
'immutable'=27
'import'=28
'in'=29
'into'=30
'inherits'=31
'input'=32
'lambda'=33
'let'=34
'library'=35
'main'=36
'mod'=37
'new'=38
'not'=39
'of'=40
'is'=41
'or'=42
'package'=43
'partial'=44
'print'=45
'private'=46
'procedure'=47
'property'=48
'ref'=49
'repeat'=50
'return'=51
'set'=52
'step'=53
'switch'=54
'system'=55
'test'=56
'then'=57
'this'=58
'throw'=59
'to'=60
'try'=61
'var'=62
'when'=63
'while'=64
'with'=65
'xor'=66
'Array'=69
'List'=70
'Dictionary'=71
'Iter'=72
'='=73
'=>'=74
'{'=75
'}'=76
'['=77
']'=78
'('=79
')'=80
'..'=81
'.'=82
','=83
':'=84
'+'=85
'-'=86
'*'=87
'/'=88
'^'=89
'<'=90
'>'=91
'<='=92
'>='=93
