NL=1
SINGLE_LINE_COMMENT=2
COMMENT_MARKER=3
ABSTRACT=4
AND=5
AS=6
BE=7
ASSERT=8
CALL=9
CASE=10
CATCH=11
CLASS=12
CONSTANT=13
CONSTRUCTOR=14
CURRY=15
DEFAULT=16
DIV=17
EACH=18
ELSE=19
END=20
ENUM=21
FOR=22
FROM=23
FUNCTION=24
GLOBAL=25
IF=26
IMMUTABLE=27
IMPORT=28
IN=29
INTO=30
INHERITS=31
INPUT=32
LAMBDA=33
LET=34
LIBRARY=35
MAIN=36
MOD=37
NEW=38
NOT=39
OF=40
IS=41
OR=42
PACKAGE=43
PARTIAL=44
PRINT=45
PRIVATE=46
PROCEDURE=47
PROPERTY=48
REPEAT=49
RETURN=50
SET=51
STEP=52
SWITCH=53
SYSTEM=54
TEST=55
THEN=56
THIS=57
THROW=58
TO=59
TRY=60
VAR=61
WHEN=62
WHILE=63
WITH=64
XOR=65
BOOL_VALUE=66
VALUE_TYPE=67
ARRAY=68
LIST=69
DICTIONARY=70
ITERABLE=71
EQUALS=72
ARROW=73
OPEN_BRACE=74
CLOSE_BRACE=75
OPEN_SQ_BRACKET=76
CLOSE_SQ_BRACKET=77
OPEN_BRACKET=78
CLOSE_BRACKET=79
DOUBLE_DOT=80
DOT=81
COMMA=82
COLON=83
PLUS=84
MINUS=85
MULT=86
DIVIDE=87
POWER=88
LT=89
GT=90
LE=91
GE=92
IS_NOT=93
TYPENAME=94
IDENTIFIER=95
LITERAL_INTEGER=96
LITERAL_FLOAT=97
LITERAL_CHAR=98
LITERAL_STRING=99
WHITESPACES=100
TEXT=101
NEWLINE=102
WS=103
'#'=3
'abstract'=4
'and'=5
'as'=6
'be'=7
'assert'=8
'call'=9
'case'=10
'catch'=11
'class'=12
'constant'=13
'constructor'=14
'curry'=15
'default'=16
'div'=17
'each'=18
'else'=19
'end'=20
'enum'=21
'for'=22
'from'=23
'function'=24
'global'=25
'if'=26
'immutable'=27
'import'=28
'in'=29
'into'=30
'inherits'=31
'input'=32
'lambda'=33
'let'=34
'library'=35
'main'=36
'mod'=37
'new'=38
'not'=39
'of'=40
'is'=41
'or'=42
'package'=43
'partial'=44
'print'=45
'private'=46
'procedure'=47
'property'=48
'repeat'=49
'return'=50
'set'=51
'step'=52
'switch'=53
'system'=54
'test'=55
'then'=56
'this'=57
'throw'=58
'to'=59
'try'=60
'var'=61
'when'=62
'while'=63
'with'=64
'xor'=65
'Array'=68
'List'=69
'Dictionary'=70
'Iter'=71
'='=72
'=>'=73
'{'=74
'}'=75
'['=76
']'=77
'('=78
')'=79
'..'=80
'.'=81
','=82
':'=83
'+'=84
'-'=85
'*'=86
'/'=87
'^'=88
'<'=89
'>'=90
'<='=91
'>='=92
