//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c://Elan//IDE//grammar//Elan.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IElanListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ElanBaseListener : IElanListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFile([NotNull] ElanParser.FileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFile([NotNull] ElanParser.FileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComment([NotNull] ElanParser.CommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComment([NotNull] ElanParser.CommentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportStatement([NotNull] ElanParser.ImportStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportStatement([NotNull] ElanParser.ImportStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace([NotNull] ElanParser.NamespaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace([NotNull] ElanParser.NamespaceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.global"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobal([NotNull] ElanParser.GlobalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.global"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobal([NotNull] ElanParser.GlobalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.main"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMain([NotNull] ElanParser.MainContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.main"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMain([NotNull] ElanParser.MainContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.procedure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedure([NotNull] ElanParser.ProcedureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.procedure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedure([NotNull] ElanParser.ProcedureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] ElanParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] ElanParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] ElanParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] ElanParser.ConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.class"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass([NotNull] ElanParser.ClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.class"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass([NotNull] ElanParser.ClassContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.enum"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum([NotNull] ElanParser.EnumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.enum"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum([NotNull] ElanParser.EnumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.test"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTest([NotNull] ElanParser.TestContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.test"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTest([NotNull] ElanParser.TestContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.procedureSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedureSignature([NotNull] ElanParser.ProcedureSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.procedureSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedureSignature([NotNull] ElanParser.ProcedureSignatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamList([NotNull] ElanParser.ParamListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamList([NotNull] ElanParser.ParamListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.paramDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamDef([NotNull] ElanParser.ParamDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.paramDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamDef([NotNull] ElanParser.ParamDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.functionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionSignature([NotNull] ElanParser.FunctionSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.functionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionSignature([NotNull] ElanParser.FunctionSignatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.statementBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementBlock([NotNull] ElanParser.StatementBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.statementBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementBlock([NotNull] ElanParser.StatementBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.singleLineStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleLineStatement([NotNull] ElanParser.SingleLineStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.singleLineStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleLineStatement([NotNull] ElanParser.SingleLineStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.multiLineStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiLineStatement([NotNull] ElanParser.MultiLineStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.multiLineStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiLineStatement([NotNull] ElanParser.MultiLineStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVar([NotNull] ElanParser.VarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVar([NotNull] ElanParser.VarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet([NotNull] ElanParser.SetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet([NotNull] ElanParser.SetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCall([NotNull] ElanParser.CallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCall([NotNull] ElanParser.CallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.throw"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThrow([NotNull] ElanParser.ThrowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.throw"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThrow([NotNull] ElanParser.ThrowContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint([NotNull] ElanParser.PrintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint([NotNull] ElanParser.PrintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInput([NotNull] ElanParser.InputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInput([NotNull] ElanParser.InputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.assert"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssert([NotNull] ElanParser.AssertContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.assert"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssert([NotNull] ElanParser.AssertContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.let"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLet([NotNull] ElanParser.LetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.let"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLet([NotNull] ElanParser.LetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.assignableValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignableValue([NotNull] ElanParser.AssignableValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.assignableValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignableValue([NotNull] ElanParser.AssignableValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.methodCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodCall([NotNull] ElanParser.MethodCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.methodCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodCall([NotNull] ElanParser.MethodCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgList([NotNull] ElanParser.ArgListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgList([NotNull] ElanParser.ArgListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf([NotNull] ElanParser.IfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf([NotNull] ElanParser.IfContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse([NotNull] ElanParser.ElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse([NotNull] ElanParser.ElseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor([NotNull] ElanParser.ForContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor([NotNull] ElanParser.ForContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.each"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEach([NotNull] ElanParser.EachContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.each"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEach([NotNull] ElanParser.EachContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.while"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile([NotNull] ElanParser.WhileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.while"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile([NotNull] ElanParser.WhileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.repeat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeat([NotNull] ElanParser.RepeatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.repeat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeat([NotNull] ElanParser.RepeatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.try"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTry([NotNull] ElanParser.TryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.try"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTry([NotNull] ElanParser.TryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.switch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch([NotNull] ElanParser.SwitchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.switch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch([NotNull] ElanParser.SwitchContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase([NotNull] ElanParser.CaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase([NotNull] ElanParser.CaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.defaultCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefaultCase([NotNull] ElanParser.DefaultCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.defaultCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefaultCase([NotNull] ElanParser.DefaultCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.mutableClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMutableClass([NotNull] ElanParser.MutableClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.mutableClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMutableClass([NotNull] ElanParser.MutableClassContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.abstractClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbstractClass([NotNull] ElanParser.AbstractClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.abstractClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbstractClass([NotNull] ElanParser.AbstractClassContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.immutableClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImmutableClass([NotNull] ElanParser.ImmutableClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.immutableClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImmutableClass([NotNull] ElanParser.ImmutableClassContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.abstractImmutableClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbstractImmutableClass([NotNull] ElanParser.AbstractImmutableClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.abstractImmutableClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbstractImmutableClass([NotNull] ElanParser.AbstractImmutableClassContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.inherits"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInherits([NotNull] ElanParser.InheritsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.inherits"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInherits([NotNull] ElanParser.InheritsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.constructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructor([NotNull] ElanParser.ConstructorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.constructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructor([NotNull] ElanParser.ConstructorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProperty([NotNull] ElanParser.PropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProperty([NotNull] ElanParser.PropertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] ElanParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] ElanParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] ElanParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] ElanParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.bracketedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBracketedExpression([NotNull] ElanParser.BracketedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.bracketedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBracketedExpression([NotNull] ElanParser.BracketedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.lambda"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLambda([NotNull] ElanParser.LambdaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.lambda"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLambda([NotNull] ElanParser.LambdaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.ifExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfExpression([NotNull] ElanParser.IfExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.ifExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfExpression([NotNull] ElanParser.IfExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.newInstance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewInstance([NotNull] ElanParser.NewInstanceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.newInstance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewInstance([NotNull] ElanParser.NewInstanceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.unaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryOp([NotNull] ElanParser.UnaryOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.unaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryOp([NotNull] ElanParser.UnaryOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.varRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarRef([NotNull] ElanParser.VarRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.varRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarRef([NotNull] ElanParser.VarRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.defaultType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefaultType([NotNull] ElanParser.DefaultTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.defaultType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefaultType([NotNull] ElanParser.DefaultTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.index"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex([NotNull] ElanParser.IndexContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.index"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex([NotNull] ElanParser.IndexContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.range"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRange([NotNull] ElanParser.RangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.range"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRange([NotNull] ElanParser.RangeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.withClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithClause([NotNull] ElanParser.WithClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.withClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithClause([NotNull] ElanParser.WithClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.inlineAsignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInlineAsignment([NotNull] ElanParser.InlineAsignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.inlineAsignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInlineAsignment([NotNull] ElanParser.InlineAsignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] ElanParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] ElanParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.literalValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralValue([NotNull] ElanParser.LiteralValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.literalValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralValue([NotNull] ElanParser.LiteralValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.enumValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumValue([NotNull] ElanParser.EnumValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.enumValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumValue([NotNull] ElanParser.EnumValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.literalDataStructure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralDataStructure([NotNull] ElanParser.LiteralDataStructureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.literalDataStructure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralDataStructure([NotNull] ElanParser.LiteralDataStructureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.literalTuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralTuple([NotNull] ElanParser.LiteralTupleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.literalTuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralTuple([NotNull] ElanParser.LiteralTupleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.dataStructureDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDataStructureDefinition([NotNull] ElanParser.DataStructureDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.dataStructureDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDataStructureDefinition([NotNull] ElanParser.DataStructureDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.listDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListDefinition([NotNull] ElanParser.ListDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.listDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListDefinition([NotNull] ElanParser.ListDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.tupleDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleDefinition([NotNull] ElanParser.TupleDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.tupleDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleDefinition([NotNull] ElanParser.TupleDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.dictionaryDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDictionaryDefinition([NotNull] ElanParser.DictionaryDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.dictionaryDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDictionaryDefinition([NotNull] ElanParser.DictionaryDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.kvp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKvp([NotNull] ElanParser.KvpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.kvp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKvp([NotNull] ElanParser.KvpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.literalList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralList([NotNull] ElanParser.LiteralListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.literalList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralList([NotNull] ElanParser.LiteralListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.literalDictionary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralDictionary([NotNull] ElanParser.LiteralDictionaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.literalDictionary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralDictionary([NotNull] ElanParser.LiteralDictionaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.literalKvp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralKvp([NotNull] ElanParser.LiteralKvpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.literalKvp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralKvp([NotNull] ElanParser.LiteralKvpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.deconstructedTuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeconstructedTuple([NotNull] ElanParser.DeconstructedTupleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.deconstructedTuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeconstructedTuple([NotNull] ElanParser.DeconstructedTupleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.deconstructedList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeconstructedList([NotNull] ElanParser.DeconstructedListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.deconstructedList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeconstructedList([NotNull] ElanParser.DeconstructedListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.binaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryOp([NotNull] ElanParser.BinaryOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.binaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryOp([NotNull] ElanParser.BinaryOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.arithmeticOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArithmeticOp([NotNull] ElanParser.ArithmeticOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.arithmeticOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArithmeticOp([NotNull] ElanParser.ArithmeticOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.logicalOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalOp([NotNull] ElanParser.LogicalOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.logicalOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalOp([NotNull] ElanParser.LogicalOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.conditionalOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalOp([NotNull] ElanParser.ConditionalOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.conditionalOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalOp([NotNull] ElanParser.ConditionalOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] ElanParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] ElanParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.dataStructureType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDataStructureType([NotNull] ElanParser.DataStructureTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.dataStructureType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDataStructureType([NotNull] ElanParser.DataStructureTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.genericSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGenericSpecifier([NotNull] ElanParser.GenericSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.genericSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGenericSpecifier([NotNull] ElanParser.GenericSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.tupleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleType([NotNull] ElanParser.TupleTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.tupleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleType([NotNull] ElanParser.TupleTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeList([NotNull] ElanParser.TypeListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeList([NotNull] ElanParser.TypeListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElanParser.funcType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncType([NotNull] ElanParser.FuncTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElanParser.funcType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncType([NotNull] ElanParser.FuncTypeContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
